# -*- coding: utf-8 -*-
from ResNetModel import loadImage



if __name__ == '__main__':
    directory_name = 'E:/raw_data/222'
    target_size = (224, 224)
    load_count = 100
    array_of_img = loadImage.load_image(directory_name, target_size, load_count)
    
    load_count = 1000
    
    """
        model = ResNet50(input_shape = (224, 224, 3), classes = 6)
    model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
    
    
    X_train_orig, Y_train_orig, X_test_orig, Y_test_orig, classes = load_dataset()
    # Normalize image vectors
    X_train = X_train_orig/255.
    X_test = X_test_orig/255.
    
    # Convert training and test labels to one hot matrices
    Y_train = convert_to_one_hot(Y_train_orig, 6).T
    Y_test = convert_to_one_hot(Y_test_orig, 6).T
    
    print ("number of training examples = " + str(X_train.shape[0]))
    print ("number of test examples = " + str(X_test.shape[0]))
    print ("X_train shape: " + str(X_train.shape))
    print ("Y_train shape: " + str(Y_train.shape))
    print ("X_test shape: " + str(X_test.shape))
    print ("Y_test shape: " + str(Y_test.shape))
    model.fit(X_train, Y_train, epochs = 2, batch_size = 32)
    """