# -*- coding: utf-8 -*-
from numpy import *
import operator
from blaze.partition import Dataset

def createDataSet(): #使用python导入数据
    group = array([[1.0,1.1], [1.0,1.0], [0,0], [0,0.1]])
    labels = ['A', 'A', 'B', 'B']
    return group, labels

def classify(inX, dataset, labels, k): #程序清单2-1 k-近邻算法
    print("dataset:")
    print(dataset)
    print('labels:')
    print(labels)
    dataSetSize = dataset.shape[0]
    print(dataSetSize)
    diffMat = tile(inX, (dataSetSize, 1)) - dataset
    sqDiffMat = diffMat**2
    sqDistances = sqDiffMat.sum(axis = 1)
    distances = sqDistances**0.5
    print(distances)
    sortedDistIndicies = distances.argsort() #排序，输出索引
    print(sortedDistIndicies)
    
    classCount = {}
    for i in range(k):
        voteIlabel = labels[sortedDistIndicies[i]]
        classCount[voteIlabel] = classCount.get(voteIlabel, 0) + 1
     
    print(classCount.iteritems())
    sortedClassCount = sorted(classCount.iteritems(), key=operator.itemgetter(1), reverse=True) #
    print(sortedClassCount)
    return sortedClassCount[0][0]


